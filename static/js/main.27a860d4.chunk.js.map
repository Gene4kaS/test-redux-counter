{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","redux/counter/counter-actions.js","redux/counter/counter-selector.js","components/Counter/Counter.js","views/CounterView.js","App.js","redux/counter/counter-reducer.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","increment","createAction","decrement","getValue","state","counter","getStep","Counter","useSelector","dispatch","useDispatch","actions","CounterView","App","to","path","valueReducer","createReducer","action","payload","combineReducers","rootReducer","counterReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAaeA,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,OACf,sBAAKC,UAAU,oBAAf,UACE,yBAAQC,KAAK,SAASC,QAASH,EAA/B,iFACgBF,KAEhB,yBAAQI,KAAK,SAASC,QAASJ,EAA/B,iFACgBD,SCJLM,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,K,QCGlDC,EAAYC,YAAa,qBACzBC,EAAYD,YAAa,qBCNzBE,EAAW,SAAAC,GAAK,OAAIA,EAAMC,QAAQN,OAClCO,EAAU,SAAAF,GAAK,OAAIA,EAAMC,QAAQb,M,MCO/B,SAASe,IACtB,IAAMR,EAAQS,YAAYL,GACpBX,EAAOgB,YAAYF,GACnBG,EAAWC,cAEjB,OACE,sBAAKf,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CACEP,KAAMA,EACNC,YAAa,kBAAMgB,EAASE,EAAkBnB,KAC9CE,YAAa,kBAAMe,EAASE,EAAkBnB,UChBvC,SAASoB,IACtB,OAAO,cAAC,EAAD,ICAT,I,EAeeC,EAfH,kBACV,qCACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,WAAT,4DAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAACH,EAAD,Y,uBCTFI,EAAeC,YAAc,IAAD,mBAC/BjB,GAAY,SAACI,EAAOc,GAAR,OAAmBd,EAAQc,EAAOC,WADf,cAE/BjB,GAAY,SAACE,EAAOc,GAAR,OAAmBd,EAAQc,EAAOC,WAFf,IAoBnBC,4BAAgB,CAC7BrB,MAAOiB,EACPxB,KAJkB,eAACY,EAAD,uDAAS,EAAT,OAAuBA,KClBrCiB,EAAcD,0BAAgB,CAClCf,QAASiB,IAKIC,EAFDC,sBAAYH,EAAaI,iCCDvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.27a860d4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ step, onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на {step}\n    </button>\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на {step}\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","import { createAction } from '@reduxjs/toolkit';\n\n// const INCREMENT = 'counter/Increment';\n// const DECREMENT = 'counter/Decrement';\n\nexport const increment = createAction('counter/Increment');\nexport const decrement = createAction('counter/Decrement');\n\n// export const increment = value => ({\n//   type: actionTypes.INCREMENT,\n//   payload: value,\n// });\n\n// export const decrement = value => ({\n//   type: actionTypes.DECREMENT,\n//   payload: value,\n// });\n","export const getValue = state => state.counter.value;\nexport const getStep = state => state.counter.step;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Controls from './Controls';\nimport Value from './Value';\nimport * as actions from '../../redux/counter/counter-actions';\nimport { getValue, getStep } from '../../redux/counter/counter-selector';\nimport './Counter.css';\n\nexport default function Counter() {\n  const value = useSelector(getValue);\n  const step = useSelector(getStep);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"Counter\">\n      <Value value={value} />\n      <Controls\n        step={step}\n        onIncrement={() => dispatch(actions.increment(step))}\n        onDecrement={() => dispatch(actions.decrement(step))}\n      />\n    </div>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   value: state.counter.value,\n//   step: state.counter.step,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onIncrement: value => dispatch(actions.increment(value)),\n//   onDecrement: value => dispatch(actions.decrement(value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import React from 'react';\nimport Counter from '../components/Counter';\n\nexport default function CounterView() {\n  return <Counter />;\n}\n","import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport CounterView from './views/CounterView';\n\nconst App = () => (\n  <>\n    <ul>\n      <li>\n        <Link to=\"/counter\">Счётчик</Link>\n      </li>\n    </ul>\n    <Switch>\n      <Route path=\"/counter\">\n        <CounterView />\n      </Route>\n    </Switch>\n  </>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { increment, decrement } from './counter-actions';\n\nconst valueReducer = createReducer(10, {\n  [increment]: (state, action) => state + action.payload,\n  [decrement]: (state, action) => state - action.payload,\n});\n\n// const valueReducer = (state = 10, { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.INCREMENT:\n//       return state + payload;\n\n//     case actionTypes.DECREMENT:\n//       return state - payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst stepReducer = (state = 5, action) => state;\n\nexport default combineReducers({\n  value: valueReducer,\n  step: stepReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport counterReducer from './counter/counter-reducer';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
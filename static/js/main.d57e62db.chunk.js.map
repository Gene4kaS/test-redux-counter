{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","redux/counter/counter-types.js","components/Counter/Counter.js","redux/counter/counter-actions.js","views/CounterView.js","App.js","redux/counter/counter-reducer.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","connect","state","counter","dispatch","actionTypes","payload","actions","CounterView","App","to","path","combineReducers","rootReducer","counterReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAaeA,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,OACf,sBAAKC,UAAU,oBAAf,UACE,yBAAQC,KAAK,SAASC,QAASH,EAA/B,iFACgBF,KAEhB,yBAAQI,KAAK,SAASC,QAASJ,EAA/B,iFACgBD,SCJLM,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,KCChD,EAHG,oBAGH,EAFG,oB,MCmBlB,IAUeC,eAVS,SAAAC,GAAK,MAAK,CAChCF,MAAOE,EAAMC,QAAQH,MACrBP,KAAMS,EAAMC,QAAQV,SAGK,SAAAW,GAAQ,MAAK,CACtCV,YAAa,SAAAM,GAAK,OAAII,ECxBC,SAAAJ,GAAK,MAAK,CACjCH,KAAMQ,EACNC,QAASN,GDsBsBO,CAAkBP,KACjDL,YAAa,SAAAK,GAAK,OAAII,ECpBC,SAAAJ,GAAK,MAAK,CACjCH,KAAMQ,EACNC,QAASN,GDkBsBO,CAAkBP,QAGpCC,EAvBf,YAA6D,IAA1CD,EAAyC,EAAzCA,MAAOP,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC3C,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CACEP,KAAMA,EACNC,YAAa,kBAAMA,EAAYD,IAC/BE,YAAa,kBAAMA,EAAYF,YEXxB,SAASe,IACtB,OAAO,cAAC,EAAD,ICAT,IAeeC,EAfH,kBACV,qCACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,WAAT,4DAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAACH,EAAD,Y,eCKOI,4BAAgB,CAC7BZ,MAhBmB,WAAoC,IAAnCE,EAAkC,uDAA1B,GAA0B,yCAApBL,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QACxC,OAAQT,GACN,KAAKQ,EACH,OAAOH,EAAQI,EAEjB,KAAKD,EACH,OAAOH,EAAQI,EAEjB,QACE,OAAOJ,IAQXT,KAJkB,eAACS,EAAD,uDAAS,EAAT,OAAuBA,KCZrCW,EAAcD,0BAAgB,CAClCT,QAASW,IAKIC,EAFDC,sBAAYH,EAAaI,iCCDvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJM,SAASC,eAAe,W","file":"static/js/main.d57e62db.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ step, onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на {step}\n    </button>\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на {step}\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","const INCREMENT = 'counter/Increment';\r\nconst DECREMENT = 'counter/Decrement';\r\n\r\nexport default { INCREMENT, DECREMENT };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Controls from './Controls';\r\nimport Value from './Value';\r\nimport * as actions from '../../redux/counter/counter-actions';\r\nimport './Counter.css';\r\n\r\nfunction Counter({ value, step, onIncrement, onDecrement }) {\r\n  return (\r\n    <div className=\"Counter\">\r\n      <Value value={value} />\r\n      <Controls\r\n        step={step}\r\n        onIncrement={() => onIncrement(step)}\r\n        onDecrement={() => onDecrement(step)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.counter.value,\r\n  step: state.counter.step,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onIncrement: value => dispatch(actions.increment(value)),\r\n  onDecrement: value => dispatch(actions.decrement(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","import actionTypes from './counter-types';\n\nexport const increment = value => ({\n  type: actionTypes.INCREMENT,\n  payload: value,\n});\n\nexport const decrement = value => ({\n  type: actionTypes.DECREMENT,\n  payload: value,\n});\n","import React from 'react';\nimport Counter from '../components/Counter';\n\nexport default function CounterView() {\n  return <Counter />;\n}\n","import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport CounterView from './views/CounterView';\n\nconst App = () => (\n  <>\n    <ul>\n      <li>\n        <Link to=\"/counter\">Счётчик</Link>\n      </li>\n    </ul>\n    <Switch>\n      <Route path=\"/counter\">\n        <CounterView />\n      </Route>\n    </Switch>\n  </>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport actionTypes from './counter-types';\r\n\r\nconst valueReducer = (state = 10, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.INCREMENT:\r\n      return state + payload;\r\n\r\n    case actionTypes.DECREMENT:\r\n      return state - payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst stepReducer = (state = 5, action) => state;\r\n\r\nexport default combineReducers({\r\n  value: valueReducer,\r\n  step: stepReducer,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport counterReducer from './counter/counter-reducer';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { BrouserRouter } from 'react-router-dom';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrouserRouter> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </BrouserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","redux/counter/counter-actions.js","views/CounterView.js","App.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","connect","state","counter","dispatch","payload","actions","CounterView","App","path","initialState","counterValue","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAaeA,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,OACf,sBAAKC,UAAU,oBAAf,UACE,yBAAQC,KAAK,SAASC,QAASJ,EAA/B,iFACgBD,KAEhB,yBAAQI,KAAK,SAASC,QAASH,EAA/B,iFACgBF,S,OCJLM,G,MAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,MCmB/D,IAUeC,eAVS,SAAAC,GAAK,MAAK,CAChCT,KAAMS,EAAMC,QAAQV,KACpBO,MAAOE,EAAMC,QAAQD,UAGI,SAAAE,GAAQ,MAAK,CACtCV,YAAa,SAAAM,GAAK,OAAII,EC3BC,SAAAJ,GAAK,MAAK,CACjCH,KAAM,oBACNQ,QAASL,GDyBsBM,CAAkBN,KACjDL,YAAa,SAAAK,GAAK,OAAII,ECvBC,SAAAJ,GAAK,MAAK,CACjCH,KAAM,oBACNQ,QAASL,GDqBsBM,CAAkBN,QAGpCC,EAxBf,YAA6D,IAA1CD,EAAyC,EAAzCA,MAAOP,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC3C,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CACEP,KAAMA,EACNC,YAAa,kBAAMA,EAAYD,IAC/BE,YAAa,kBAAMA,EAAYF,MALnC,gBENW,SAASc,IACtB,OAAO,cAAC,EAAD,ICAT,IAeeC,EAfH,kBACV,mCAME,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAACF,EAAD,W,eCXFG,EAAe,CAAEC,aAAc,GA2B/BC,EAAQC,aAzBE,WAA8C,IAA7CX,EAA4C,uDAApCQ,EAAoC,yCAApBb,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,QAC7C,OAAQR,GACN,IAAK,oBACH,OAAO,2BACFK,GADL,IAEEC,QAAQ,2BACHD,EAAMC,SADJ,IAELH,MAAOE,EAAMS,aAAeN,MAIlC,IAAK,oBACH,OAAO,2BACFH,GADL,IAEEC,QAAQ,2BACHD,EAAMC,SADJ,IAELH,MAAOE,EAAMS,aAAeN,MAIlC,QACE,OAAOH,MAKEU,ICvBfE,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJK,SAASC,eAAe,W","file":"static/js/main.99d46ed2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Controls = ({ step, onIncrement, onDecrement }) => (\r\n  <div className=\"Counter__controls\">\r\n    <button type=\"button\" onClick={onIncrement}>\r\n      Увеличить на {step}\r\n    </button>\r\n    <button type=\"button\" onClick={onDecrement}>\r\n      Уменьшить на {step}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport Controls from './Controls';\r\nimport { connect } from 'react-redux';\r\nimport './Counter.css';\r\nimport Value from './Value';\r\nimport * as actions from '../../redux/counter/counter-actions';\r\n\r\nfunction Counter({ value, step, onIncrement, onDecrement }) {\r\n  return (\r\n    <div className=\"Counter\">\r\n      <Value value={value} />\r\n      <Controls\r\n        step={step}\r\n        onIncrement={() => onIncrement(step)}\r\n        onDecrement={() => onDecrement(step)}\r\n      />\r\n      Counter\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  step: state.counter.step,\r\n  value: state.counter.state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onIncrement: value => dispatch(actions.increment(value)),\r\n  onDecrement: value => dispatch(actions.decrement(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","export const increment = value => ({\r\n  type: 'counter/Increment',\r\n  payload: value,\r\n});\r\n\r\nexport const decrement = value => ({\r\n  type: 'counter/Decrement',\r\n  payload: value,\r\n});\r\n","import React from 'react';\r\nimport Counter from '../components/Counter';\r\n\r\nexport default function CounterView() {\r\n  return <Counter />;\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport CounterView from './views/CounterView';\r\n\r\nconst App = () => (\r\n  <>\r\n    {/* <ul>\r\n      <li>\r\n        <Link to=\"/counter\">Счётчик</Link>\r\n      </li>\r\n    </ul> */}\r\n    <Switch>\r\n      <Route path=\"/counter\">\r\n        <CounterView />\r\n      </Route>\r\n    </Switch>\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import { createStore } from 'redux';\r\n\r\nconst initialState = { counterValue: 0 };\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'counter/Increment':\r\n      return {\r\n        ...state,\r\n        counter: {\r\n          ...state.counter,\r\n          value: state.counterValue + payload,\r\n        },\r\n      };\r\n\r\n    case 'counter/Decrement':\r\n      return {\r\n        ...state,\r\n        counter: {\r\n          ...state.counter,\r\n          value: state.counterValue - payload,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n// import { BrouserRouter } from 'react-router-dom';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <BrouserRouter> */}\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    {/* </BrouserRouter> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","redux/counter/counter-actions.js","views/CounterView.js","App.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","connect","state","counter","dispatch","payload","actions","CounterView","App","to","path","initialState","counterValue","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAaeA,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,OACf,sBAAKC,UAAU,oBAAf,UACE,yBAAQC,KAAK,SAASC,QAASJ,EAA/B,iFACgBD,KAEhB,yBAAQI,KAAK,SAASC,QAASH,EAA/B,iFACgBF,S,QCJLM,G,MAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,MCmB/D,IAUeC,eAVS,SAAAC,GAAK,MAAK,CAChCT,KAAMS,EAAMC,QAAQV,KACpBO,MAAOE,EAAMC,QAAQD,UAGI,SAAAE,GAAQ,MAAK,CACtCV,YAAa,SAAAM,GAAK,OAAII,EC3BC,SAAAJ,GAAK,MAAK,CACjCH,KAAM,oBACNQ,QAASL,GDyBsBM,CAAkBN,KACjDL,YAAa,SAAAK,GAAK,OAAII,ECvBC,SAAAJ,GAAK,MAAK,CACjCH,KAAM,oBACNQ,QAASL,GDqBsBM,CAAkBN,QAGpCC,EAxBf,YAA6D,IAA1CD,EAAyC,EAAzCA,MAAOP,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC3C,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CACEP,KAAMA,EACNC,YAAa,kBAAMA,EAAYD,IAC/BE,YAAa,kBAAMA,EAAYF,MALnC,gBENW,SAASc,IACtB,OAAO,cAAC,EAAD,ICAT,IAeeC,EAfH,kBACV,qCACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,WAAT,4DAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAACH,EAAD,Y,eCXFI,EAAe,CAAEC,aAAc,GA2B/BC,EAAQC,aAzBE,WAA8C,IAA7CZ,EAA4C,uDAApCS,EAAoC,yCAApBd,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,QAC7C,OAAQR,GACN,IAAK,oBACH,OAAO,2BACFK,GADL,IAEEC,QAAQ,2BACHD,EAAMC,SADJ,IAELH,MAAOE,EAAMU,aAAeP,MAIlC,IAAK,oBACH,OAAO,2BACFH,GADL,IAEEC,QAAQ,2BACHD,EAAMC,SADJ,IAELH,MAAOE,EAAMU,aAAeP,MAIlC,QACE,OAAOH,MAKEW,ICvBfE,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJK,SAASC,eAAe,W","file":"static/js/main.cfc08120.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ step, onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на {step}\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на {step}\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","import React from 'react';\nimport Controls from './Controls';\nimport { connect } from 'react-redux';\nimport './Counter.css';\nimport Value from './Value';\nimport * as actions from '../../redux/counter/counter-actions';\n\nfunction Counter({ value, step, onIncrement, onDecrement }) {\n  return (\n    <div className=\"Counter\">\n      <Value value={value} />\n      <Controls\n        step={step}\n        onIncrement={() => onIncrement(step)}\n        onDecrement={() => onDecrement(step)}\n      />\n      Counter\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  step: state.counter.step,\n  value: state.counter.state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: value => dispatch(actions.increment(value)),\n  onDecrement: value => dispatch(actions.decrement(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","export const increment = value => ({\n  type: 'counter/Increment',\n  payload: value,\n});\n\nexport const decrement = value => ({\n  type: 'counter/Decrement',\n  payload: value,\n});\n","import React from 'react';\nimport Counter from '../components/Counter';\n\nexport default function CounterView() {\n  return <Counter />;\n}\n","import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport CounterView from './views/CounterView';\n\nconst App = () => (\n  <>\n    <ul>\n      <li>\n        <Link to=\"/counter\">Счётчик</Link>\n      </li>\n    </ul>\n    <Switch>\n      <Route path=\"/counter\">\n        <CounterView />\n      </Route>\n    </Switch>\n  </>\n);\n\nexport default App;\n","import { createStore } from 'redux';\n\nconst initialState = { counterValue: 0 };\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'counter/Increment':\n      return {\n        ...state,\n        counter: {\n          ...state.counter,\n          value: state.counterValue + payload,\n        },\n      };\n\n    case 'counter/Decrement':\n      return {\n        ...state,\n        counter: {\n          ...state.counter,\n          value: state.counterValue - payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { BrouserRouter } from 'react-router-dom';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrouserRouter> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </BrouserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}